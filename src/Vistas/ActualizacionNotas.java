/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JInternalFrame.java to edit this template
 */
package Vistas;

import AccesoADatos.AlumnoData;
import AccesoADatos.InscripcionData;
import Entidades.Alumno;
import Entidades.Inscripcion;
import Entidades.Materia;
import java.util.ArrayList;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author litob
 */
public class ActualizacionNotas extends javax.swing.JInternalFrame {

    private ArrayList<Materia> lista_materia;
    private ArrayList<Alumno> lista_alumno;
    private ArrayList<Inscripcion> lista_inscripcion;
    private DefaultTableModel modelo;
    private AlumnoData aData;
    private InscripcionData iData;
    
    public ActualizacionNotas() {
        initComponents();
        modelo = new DefaultTableModel();
        aData = new AlumnoData();
        iData = new InscripcionData();
        lista_alumno = (ArrayList<Alumno>)aData.listarAlumnos();
        armarTabla();
        cargaAlumnos();
        cargarInscriptas();
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jButton_Guardar = new javax.swing.JButton();
        jButton_Salir = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable_Carga = new javax.swing.JTable();
        jLabel_Seleccionar = new javax.swing.JLabel();
        jComboBox_Alumno = new javax.swing.JComboBox<>();
        jLabel_Formulario = new javax.swing.JLabel();

        jButton_Guardar.setText("Guardar");
        jButton_Guardar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_GuardarActionPerformed(evt);
            }
        });

        jButton_Salir.setText("Salir");
        jButton_Salir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_SalirActionPerformed(evt);
            }
        });

        jTable_Carga.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(jTable_Carga);

        jLabel_Seleccionar.setText("Seleccione un alumno:");

        jComboBox_Alumno.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox_AlumnoActionPerformed(evt);
            }
        });

        jLabel_Formulario.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        jLabel_Formulario.setText("CARGA NOTAS");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(70, 70, 70)
                .addComponent(jButton_Guardar)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jButton_Salir)
                .addGap(85, 85, 85))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(43, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel_Seleccionar)
                        .addGap(18, 18, 18)
                        .addComponent(jComboBox_Alumno, javax.swing.GroupLayout.PREFERRED_SIZE, 197, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 355, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(28, 28, 28))
            .addGroup(layout.createSequentialGroup()
                .addGap(138, 138, 138)
                .addComponent(jLabel_Formulario)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel_Formulario)
                .addGap(28, 28, 28)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel_Seleccionar)
                    .addComponent(jComboBox_Alumno, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 11, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 193, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(30, 30, 30)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton_Guardar)
                    .addComponent(jButton_Salir))
                .addGap(41, 41, 41))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton_GuardarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_GuardarActionPerformed
    int filaSelec = jTable_Carga.getSelectedRow();
    
    if (filaSelec != -1) {
        // Obtener los valores de la fila seleccionada
        int idMateria = (int) modelo.getValueAt(filaSelec, 0);
        int idAlumno = ((Alumno) jComboBox_Alumno.getSelectedItem()).getIdAlumno();
        Double nota = (Double) jTable_Carga.getValueAt(filaSelec, 2);

        
        iData.actualizarNota(idAlumno, idMateria, nota);
        
        JOptionPane.showMessageDialog(this, "Nota actualizada correctamente");
    } else {
        JOptionPane.showMessageDialog(this, "Debe seleccionar una materia");   
    }

    }//GEN-LAST:event_jButton_GuardarActionPerformed

    private void jButton_SalirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_SalirActionPerformed
        // TODO add your handling code here:
        this.dispose();
    }//GEN-LAST:event_jButton_SalirActionPerformed

    private void jComboBox_AlumnoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox_AlumnoActionPerformed
      
        cargarInscriptas();
        
    }//GEN-LAST:event_jComboBox_AlumnoActionPerformed


    private void cargaAlumnos(){
        for (Alumno alum : lista_alumno) {
            jComboBox_Alumno.addItem(alum);
        }
    }
        private void armarTabla(){
        ArrayList<Object> cabecera = new ArrayList<>();
        cabecera.add("ID");
        cabecera.add("Nombre");
        cabecera.add("Nota");
        
        for (Object object : cabecera) {
            modelo.addColumn(object);
        }
        jTable_Carga.setModel(modelo);
        }
        private void cargarInscriptas(){        
            modelo.setRowCount(0);
            Alumno selec = (Alumno) jComboBox_Alumno.getSelectedItem();

            lista_materia = (ArrayList) iData.obtenerMateriasCursadas(selec.getIdAlumno());
            lista_inscripcion = (ArrayList) iData.obtenerIncripcionesPorAlumno(selec.getIdAlumno());
    
            for (Materia materia : lista_materia) {
                for (Inscripcion inscripcion : lista_inscripcion) {
                    if (inscripcion.getMateria().getIdMateria() == materia.getIdMateria() &&
                        inscripcion.getAlumno().getIdAlumno() == selec.getIdAlumno()) {

                        // Obtener la nota de la inscripciÃ³n y agregar la fila a la tabla
                        modelo.addRow(new Object[] { materia.getIdMateria(), materia.getNombre(), inscripcion.getNota() });
                        break; 
                    }
                }
            }      
        }

        private void borrarFila(){
        int indice = modelo.getRowCount()-1;
        
        for (int i = indice; i>=0; i--) {
            modelo.removeRow(i);
        }
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton_Guardar;
    private javax.swing.JButton jButton_Salir;
    private javax.swing.JComboBox<Alumno> jComboBox_Alumno;
    private javax.swing.JLabel jLabel_Formulario;
    private javax.swing.JLabel jLabel_Seleccionar;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable_Carga;
    // End of variables declaration//GEN-END:variables
}
